@page "/list-quizzes"
@attribute [Authorize]

@inherits ListQuizBase

<div class="quiz-div">
    <DataGrid TItem="QuizViewModel"
              UseValidation="true"
              Hoverable="true"
              Data="@this.QuizViewModelsCollection"
              ReadData="@OnReadData"
              TotalItems="@this.TotalQuizzes"
              ShowPager="true"
              PageSize="10"
              Filterable="true"
              FilterMethod="DataGridFilterMethod.Contains"
              Editable="true"
              EditMode="DataGridEditMode.Inline">
        <ChildContent>
            <DataGridCommandColumn TItem="QuizViewModel">
                <NewCommandTemplate>
                    <Icon Class="pointer-hand" Name="@("far fa-plus-square")" IconSize="IconSize.Large" Clicked="this.OnNewClick"></Icon>
                </NewCommandTemplate>
                <EditCommandTemplate>
                    <Icon Name="@("far fa-edit")" IconSize="IconSize.Large" Clicked="() => this.OnEditClick(context.Item.Id)" Class="grid-btn" />
                </EditCommandTemplate>
                <DeleteCommandTemplate>
                    <Icon Name="@("far fa-trash-alt")" IconSize="IconSize.Large" Class="grid-btn" Clicked="() => this.OnDeletedClick(context.Item.Id)" />
                </DeleteCommandTemplate>
            </DataGridCommandColumn>
            <DataGridColumn TItem="QuizViewModel" Field="@nameof(QuizViewModel.Name)" Caption="Name" />
            <DataGridColumn TItem="QuizViewModel" Field="@nameof(QuizViewModel.ExamName)" Caption="ExamName" />
            <DataGridColumn TItem="QuizViewModel" Field="@nameof(QuizViewModel.Published)" Filterable="false">
                <DisplayTemplate>
                    <Condition Evaluation="context.Published">
                        <Match>
                            <Button Color="Color.Warning" Clicked="() => this.OnPublishAsync(context.Id)">Re-Publish</Button>
                        </Match>
                        <NotMatch>
                            <Button Color="Color.Warning" Clicked="() => this.OnPublishAsync(context.Id)">Publish</Button>
                        </NotMatch>
                    </Condition>
                </DisplayTemplate>
            </DataGridColumn>
        </ChildContent>
        <EmptyTemplate>
            <p>No quizzes found!</p>
        </EmptyTemplate>
    </DataGrid>
</div>